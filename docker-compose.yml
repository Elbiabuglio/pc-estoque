services:
  db:
    image: postgres:latest
    container_name: pc-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: estoque_db
    #volumes:
    #  - db_data:/var/lib/postgresql/data
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: devtools/Dockerfile
    container_name: pc-estoque
    ports:
      - "8000:8000"
    environment:
      - ENV=dev
      - APP_DB_URL=postgresql+asyncpg://admin:admin@db:5432/estoque_db

    env_file:
      - devtools/dotenv.dev
    depends_on:
      - db
    working_dir: /pc-estoque
    command:
      ["uvicorn", "app.api_main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: unless-stopped
#  sonarqube:
#   image: sonarqube:latest
#  container_name: pc-sonarqube
# ports:
#  - "9000:9000"
#volumes:
#  - sonarqube_data:/opt/sonarqube/data
#  - sonarqube_logs:/opt/sonarqube/logs
#  - sonarqube_extensions:/opt/sonarqube/extensions
#restart: unless-stopped

#volumes:
#  sonarqube_data:
#  sonarqube_logs:
#  sonarqube_extensions:
# Comando para rodar o compose
#docker-compose up -d --build

# Comando para rodar sonarqube
#docker-compose up -d sonarqube

# Comando para rodar a aplicação
#docker-compose up -d --build app

# Comando para parar a aplicação
#docker-compose down

